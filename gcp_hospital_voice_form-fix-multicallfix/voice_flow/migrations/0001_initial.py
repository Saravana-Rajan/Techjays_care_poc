# Generated by Django 5.2.5 on 2025-09-05 18:10

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text="Patient's full name", max_length=255)),
                ('dob', models.DateField(help_text='Date of birth in MM/DD/YYYY format')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other'), ('Prefer not to say', 'Prefer not to say')], help_text="Patient's gender", max_length=20)),
                ('contact_number', models.CharField(help_text='Contact phone number', max_length=20)),
                ('email', models.EmailField(blank=True, help_text='Email address', max_length=254, null=True)),
                ('address', models.TextField(help_text='Home address (Street, City, State, ZIP)')),
                ('preferred_language', models.CharField(blank=True, help_text='Preferred language', max_length=100, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, help_text='Emergency contact name', max_length=255, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, help_text='Emergency contact phone number', max_length=20, null=True)),
                ('relationship_to_patient', models.CharField(blank=True, help_text='Relationship to patient', max_length=50, null=True)),
                ('caller_type', models.CharField(help_text='Type of caller', max_length=20)),
                ('reason_for_visit', models.TextField(help_text='Reason for the visit')),
                ('visit_type', models.CharField(choices=[('First time', 'First time'), ('Returning', 'Returning')], help_text='Type of visit', max_length=20)),
                ('primary_physician', models.CharField(blank=True, help_text='Primary care physician', max_length=255, null=True)),
                ('referral_source', models.CharField(choices=[('Self', 'Self'), ('Physician Referral', 'Physician Referral'), ('Insurance', 'Insurance'), ('Other', 'Other')], help_text='Source of referral', max_length=50)),
                ('symptoms', models.TextField(help_text='Current symptoms')),
                ('symptom_duration', models.CharField(blank=True, help_text='Duration of symptoms', max_length=100, null=True)),
                ('pain_level', models.IntegerField(blank=True, help_text='Pain level on scale of 0-10', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('current_medications', models.TextField(blank=True, help_text='Current medications', null=True)),
                ('allergies', models.TextField(blank=True, help_text='Known allergies', null=True)),
                ('medical_history', models.TextField(blank=True, help_text='Past medical history', null=True)),
                ('family_history', models.TextField(blank=True, help_text='Family medical history', null=True)),
                ('guardian_name', models.CharField(blank=True, help_text='Parent/Guardian name', max_length=255, null=True)),
                ('guardian_contact', models.CharField(blank=True, help_text='Parent/Guardian contact', max_length=20, null=True)),
                ('guardian_relationship', models.CharField(blank=True, help_text='Relationship to child', max_length=100, null=True)),
                ('school_grade', models.CharField(blank=True, help_text="Child's school/grade", max_length=100, null=True)),
                ('vaccination_status', models.CharField(blank=True, choices=[('Up to date', 'Up to date'), ('Not sure', 'Not sure'), ('Behind schedule', 'Behind schedule')], help_text='Vaccination status', max_length=20, null=True)),
                ('interpreter_need', models.BooleanField(blank=True, help_text='Need for interpreter', null=True)),
                ('interpreter_language', models.CharField(blank=True, help_text='Interpreter language', max_length=100, null=True)),
                ('accessibility_needs', models.TextField(blank=True, help_text='Mobility/accessibility needs', null=True)),
                ('dietary_needs', models.TextField(blank=True, help_text='Dietary considerations', null=True)),
                ('consent_share_records', models.BooleanField(blank=True, help_text='Consent to share records', null=True)),
                ('preferred_communication_method', models.CharField(blank=True, choices=[('Phone', 'Phone'), ('Email', 'Email'), ('Patient Portal', 'Patient Portal')], help_text='Preferred communication method', max_length=20, null=True)),
                ('appointment_availability', models.CharField(blank=True, choices=[('Morning', 'Morning'), ('Afternoon', 'Afternoon'), ('Evening', 'Evening')], help_text='Appointment availability preference', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the appointment was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the appointment was last updated')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'db_table': 'appointment',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachments/%Y/%m/%d/')),
                ('original_name', models.CharField(max_length=255)),
                ('content_type', models.CharField(max_length=100)),
                ('size_bytes', models.PositiveIntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='voice_flow.appointment')),
            ],
            options={
                'verbose_name': 'Appointment Attachment',
                'verbose_name_plural': 'Appointment Attachments',
                'db_table': 'appointment_attachment',
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
